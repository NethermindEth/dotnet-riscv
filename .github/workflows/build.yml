name: Build .NET SDK

on:
  workflow_dispatch:
    inputs:
      fork:
        description: 'dotnet VMR fork name'
        required: true
        type: string
        default: dotnet
      branch:
        description: 'dotnet VMR branch name'
        required: true
        type: string
        default: main
      release:
        description: 'publish release'
        type: boolean

jobs:
  run:
    runs-on: ubuntu-latest

    steps:

    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-cached-tools: 'true'

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clone repository
      run: |
        git clone --single-branch --depth 1 -b ${{ inputs.branch }} https://github.com/${{ inputs.fork }}/dotnet

    - name: Patch repository
      run: |
        cd ${{ github.workspace }}
        ./patch_runtime.sh

    - name: Build
      run: |
        docker run --platform linux/amd64 --rm -v${{ github.workspace }}/dotnet:/dotnet -w /dotnet -e ROOTFS_DIR=/crossrootfs/riscv64 \
          mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-riscv64 \
            ./build.sh --clean-while-building --prep -sb --os linux-musl --arch riscv64 -p:OfficialBuildId=$(date +%Y%m%d).99

    - name: List assets directory
      run: |
        find "${{ github.workspace }}/dotnet/artifacts"

    - name: Pack compiler-linux
      run: |
        cd ${{ github.workspace }}
        sudo ./01_pack_compiler_linux.sh

    - name: Pack crossrootfs
      run: |
        cd ${{ github.workspace }}
        sudo ./02_pack_crossrootfs.sh

    - name: Pack GNU libs
      run: |
        cd ${{ github.workspace }}
        sudo ./03_pack_gnu_libs.sh

    - name: Pack libs
      run: |
        cd ${{ github.workspace }}
        sudo ./04_pack_libs.sh

    - name: Pack bflat-compiler-native-linux
      run: |
        cd ${{ github.workspace }}
        sudo ./05_pack_bflat_compiler_native_linux.sh

    - name: Pack bflat-refs
      run: |
        cd ${{ github.workspace }}
        sudo ./06_pack_refs.sh

    - name: Pack bflat-libs-linux
      run: |
        cd ${{ github.workspace }}
        sudo ./07_pack_bflat_libs_linux.sh

    - name: Pack bflat-compiler-nupkg
      run: |
        cd ${{ github.workspace }}
        sudo ./08_pack_bflat_compiler_nupkg.sh

    - name: Upload .NET
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-sdk-linux-musl-riscv64
        path: |
          ${{ github.workspace }}/dotnet/artifacts/assets/Release/Sdk/*/dotnet-sdk-*.tar.gz
          ${{ github.workspace }}/dotnet/artifacts/packages/Release/Shipping/runtime/*.nupkg

    - name: Upload crossrootfs
      uses: actions/upload-artifact@v4
      with:
        name: crossrootfs-musl-riscv64
        path: ${{ github.workspace }}/output/crossrootfs-linux/crossrootfs-musl-riscv64.tar.gz

    - name: Upload libs-linux
      uses: actions/upload-artifact@v4
      with:
        name: libs-linux-musl-riscv64
        path: ${{ github.workspace }}/output/libs-linux/libs-linux-musl-riscv64.zip

    - name: Upload compiler-linux
      uses: actions/upload-artifact@v4
      with:
        name: compiler-linux-glibc-x64
        path: ${{ github.workspace }}/output/compiler-linux/compiler-linux-glibc-x64.zip

    - name: Upload bflat-compiler-native-linux
      uses: actions/upload-artifact@v4
      with:
        name: bflat-compiler-native-linux-glibc-x64
        path: ${{ github.workspace }}/output/bflat-compiler-linux-native/bflat-compiler-native-linux-glibc-x64.zip

    - name: Upload bflat-refs
      uses: actions/upload-artifact@v4
      with:
        name: bflat-refs
        path: ${{ github.workspace }}/output/bflat-refs/bflat-refs.zip

    - name: Upload bflat-libs-linux
      uses: actions/upload-artifact@v4
      with:
        name: bflat-libs-linux
        path: ${{ github.workspace }}/output/bflat-libs-linux/bflat-libs-linux-musl-riscv64.zip

    - name: Upload bflat-compiler-nupkg
      uses: actions/upload-artifact@v4
      with:
        name: bflat-compiler-nupkg
        path: ${{ github.workspace }}/output/bflat-compiler-nupkg/bflat.compiler.10.0.0.nupkg

    - name: Make release
      if: ${{ inputs.release }}
      run: |
        sudo apt update -y
        sudo apt install -y hub

        # hub(1) requires release to be created inside a git repo
        git clone https://${{ secrets.CLONE_TOKEN }}:x-oauth-basic@github.com/${{ github.repository }}.git repo
        cd repo

        sdk_path=$(find ${{ github.workspace }}/dotnet/artifacts/assets/Release/Sdk -name 'dotnet-sdk-*.tar.gz' | head -n1)
        sdk_filename=$(basename "$sdk_path")

        # Extract version: strip prefix/suffix to get e.g. "10.0.100-preview.5.25277.114"
        sdk_version=$(echo "$sdk_filename" | sed -E 's/dotnet-sdk-([^-]+(-[^-]+)*)-linux-.+\.tar\.gz/\1/')

        artifacts=" -a $sdk_path"
        artifacts+=" -a $(find ${{ github.workspace }}/dotnet/artifacts/packages/Release/Shipping/runtime -name '*.nupkg' ! -name '*symbols.nupkg' | head -n1)"

        tag_name="$sdk_version"

        echo "tag_name: $tag_name"
        echo "artifacts: $artifacts"

        # docs: https://hub.github.com/hub-release.1.html
        hub release create $artifacts --prerelease -m "$tag_name" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
